[flake8]

################### PROGRAM ################################

# Specify the number of subprocesses that Flake8 will use to run checks in parallel.
#jobs = auto


################### OUTPUT #################################

########## Verbosity ##########

# Increase the verbosity of Flake8’s output.
verbose = 0
# Decrease the verbosity of Flake8’s output.
quiet = 0


########## Formatting ##########

# Select the formatter used to display errors to the user.
format = default

# Print the total number of errors.
count = True
# Print the source code generating the error/warning in question.
show-source = True
# Count the number of occurrences of each error/warning code and print a report.
statistics = True


################### FILE PATTERNS ##########################

# Provide a comma-separated list of glob patterns to exclude from checks.
exclude =
    # git folder
    .git,
    # python cache
    __pycache__,
    # pytest cache
    .pytest_cache,
    # mypy cache
    .mypy_cache,
    scripts/*


# Provide a comma-separate list of glob patterns to include for checks.
filename =
    *.py


################### LINTING ################################

########## Environment ##########

# Provide a custom list of builtin functions, objects, names, etc.
builtins =


########## Options ##########

# Report all errors, even if it is on the same line as a `# NOQA` comment.
disable-noqa = False

# Set the maximum length that any line (with some exceptions) may be.
max-line-length = 130
# Set the maximum allowed McCabe complexity value for a block of code.
max-complexity = 10
# Toggle whether pycodestyle should enforce matching the indentation of the opening bracket’s line.
# incluences E131 and E133
hang-closing = True


########## Rules ##########

# ERROR CODES
#
# E/W  - PEP8 errors/warnings (pycodestyle)
# F    - linting errors (pyflakes)
# C    - McCabe complexity error (mccabe)
#
# E133 - closing bracket is missing indentation (conflicts with black)
# E203 - whitespace before ‘:’ (conflicts with black)
# W503 - line break before binary operator
# F401 - module imported but unused
# F403 - ‘from module import *’ used; unable to detect undefined names
# PIE786 - Use precise exception handlers
# B008 - Doesn't like Query in the function definition, FASTAPI requires this
# C901 - Too complex
# W291 - trailing whitespace - Doesnt like multiline strings
# S104 - Binding to all interfaces
# PIE785 - Celery job timeouts

# Specify a list of codes to ignore.
ignore =
    E133,
    E203,
    W503,
    Q000,
    PIE786,
    B008,
    C901,
    W291
    S104
    E800
    A002
    E501,
    P103,
    E402,
    PIE802,
    PIE785,
    PIE798,
    PIE803,
    PIE801


# Specify a list of mappings of files and the codes that should be ignored for the entirety of the
# file.
per-file-ignores =
    __init__.py:F401,F403
    models/*.py:A003,VNE003
    schemas/*.py:A003,VNE003,N805,VNE001
    src/helper.py:A003,F821
